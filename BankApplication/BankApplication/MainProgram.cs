// See https://aka.ms/new-console-template for more information
using System.Text;

namespace BankApplication
{
    public class Bank 
    {
        static UserDetails? ud;
        static BankDetails? bankDetails ;


        public static void Main(string[] args)
        {
            string? newUser;
            do
            {
                ud = new UserDetails();
                bankDetails = new BankDetails();
                Console.WriteLine("Welcome to ABC Bank \nFor creating new Bank Account please enter following details ");
                ud.GetDetails();
                bankDetails.GetBankDetails();

                ShowUserDetails();
                ShowBankDetails();
                Console.WriteLine("Do you want to create new user (y/Y or n/N) : ");
                newUser = Console.ReadLine();


            } while (newUser == "y" || newUser == "Y" || newUser == "Yes" || newUser == "yes");
        }
        public static void ShowUserDetails()
        {
            Console.WriteLine("\nDetails of the user -> ");
            Console.WriteLine("User id : "+ud!.userId);
            Console.WriteLine("First Name : "+ud.fName);
            Console.WriteLine("Last Name : "+ud.lName);
            Console.WriteLine("Email id : "+ud.email);
            Console.WriteLine("Contact number : "+ud.contNo);
            Console.WriteLine("Date of birth : "+ud.dOB);
            Console.WriteLine("Gender : "+ud.gender);
            Console.WriteLine("Maritual status : "+ud.marStatus);
            if (ud.marStatus == "married")
            {
                Console.WriteLine("Name of spouse : " + ud.spouseName);
                Console.WriteLine("Does user have childs : " + ud.haveChilds);
                if (ud.haveChilds)
                {
                    Console.WriteLine("Number of childerns have : " + ud.noOfChilds);
                    if (ud.haveChilds == true)
                    {
                        foreach (string nm in ud.childNames!)
                        {
                            int i = 1;
                            Console.WriteLine($"Name of child {i} : " + nm);
                        }
                    }
                }
            }

        }

        public static void ShowBankDetails()
        {
            Console.WriteLine("\nBank details entered by user - ");
            Console.WriteLine("Autogenerated Bank Account Number : "+bankDetails!.accNo);
            Console.WriteLine("Permanant address : "+bankDetails.prmAddr);
            Console.WriteLine("Communication address : "+bankDetails.comAddr);
            Console.WriteLine("Does user want credit card : " + bankDetails.wantCreditCard);
            if (bankDetails.wantCreditCard)
            {
                Console.WriteLine("Upto Credit allowed : " + bankDetails.crdAllowed);
                StringBuilder sb = new StringBuilder();
                for (int i = 0; i < bankDetails.crdCardNo!.Length; i++)
                {
                    if (i % 4 == 0)
                        sb.Append(' ');
                    sb.Append(bankDetails.crdCardNo[i]);
                }
                string crdNo = sb.ToString(); 
                Console.WriteLine("Credit card number : " + crdNo);
            }
        }

    }

}
